"""
Django settings for djangorestui project.

Generated by 'django-admin startproject' using Django 2.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
import sys
import django_heroku 

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'l)d9v*t45ylgi0_m@pmr^9#z1fm391l!$$ck(@lh&tq#(!95ji'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['10.0.0.165','10.0.1.128','127.0.0.1','10.0.0.252','10.0.0.234','.ClaSo.com','song-classification.herokuapp.com']
INTERNAL_HOSTS = ['']

# if 'runserver' in sys.argv:
#     import dns.resolver

#     resolver = dns.resolver.Resolver()
#     # Set the timeout to 1 so we don't wait too long
#     resolver.timeout = 1
#     resolver.lifetime = 1

#     for host in INTERNAL_HOSTS:
#         try:
#             # For ipv6 you can use AAAA instead of A here
#             ip = resolver.query(host, 'A')[0].address
#             INTERNAL_IPS.append(ip)
#         except dns.exception.Timeout:
#             print('Unable to resolve %r, skipping' % host)

MEDIA_ROOT = 'D:/SongClassificationAndStyleTransfer-DjangoApp/djangorestui/api/media/'
MEDIA_URL = 'D:/SongClassificationAndStyleTransfer-DjangoApp/djangorestui/api/media/'

# STATIC_ROOT = os.path.join(BASE_DIR, ‘staticfiles’)
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'tinymce',
    'api'
]
# APPEND_SLASH=False

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'audiofield.middleware.threadlocals.ThreadLocals',


]
APNS_ERROR_TIMEOUT = 0.5

ROOT_URLCONF = 'djangorestui.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'djangorestui.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
                'DATABASE_HOST' : 'localhost',

    }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE =  'Asia/Kolkata'
USE_I18N = True
USE_L10N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'
SETTINGS_PATH = os.getcwd()
TEMPLATE_DIRS = (
    os.path.join(SETTINGS_PATH, 'templates'),
)

django_heroku.settings(locals())
